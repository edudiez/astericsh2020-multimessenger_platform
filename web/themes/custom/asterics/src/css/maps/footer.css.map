{"version":3,"sources":["footer.scss","_mixins.scss"],"names":[],"mappings":"AAGA,6BACI,YAAW,EACX,gBAAgB,EAChB,eAAe,EACf,kBAAkB,EAClB,eAAc,EACd,yBCHc,EAAA;;ADHlB,wFAQQ,qBAAoB,EAAA;;AAR5B,8CAYY,cAAa,EAAA;;AAZzB,iDAcgB,eAAc,EAAA;;AAd9B,uDAiBgB,YAAW,EACX,kBAAiB,EACjB,WAAU,EACV,cAAa,EAAA;;AApB7B,8DAuBgB,kBAAiB,EAAA","file":"../footer.css","sourcesContent":["@import \"mixins.scss\";\n\n\nfooter[role=\"contentinfo\"] {\n    height:80px;\n    font-weight: 300;\n    font-size: 14px;\n    text-align: center;\n    padding:30px 0;\n    background-color:$blaufons;\n    #block-copyright, #block-footer {\n        display:inline-block;\n    }\n    #block-footer {\n        ul {\n            padding:0 2px;\n            li {\n                display:inline;\n            }\n            li:after {\n                content:\"|\";\n                position:relative;\n                bottom:1px;\n                padding:0 2px;\n            }\n            li:last-of-type {\n                border-right:none;\n            }\n        }\n    }\n}\n","// Global variables\n$images: '../images/';\n\n// Colores\n$negre: #000;\n$blanc: #fff;\n$blaufons: #071c47;\n$buttonlink: #f2644c;\n$azul_claro: #53d6f9;\n$gris_claro: #6a7791;\n$gris_claro2: #c3c9d3;\n\n\n// Mixin variables\n$path: '';\n\n\n@mixin setPath($string){\n  $path: $string !global;\n}\n@mixin fontFace($family,$fontName, $bSupport: 2, $style: normal,$weight: normal) {\n\t@font-face {\n\n    font-family: $family;\n\n    @if $bSupport == 2 {\n\n      src: url('#{$path}#{$fontName}/#{$fontName}.eot'); // IE9 compat\n  \t\tsrc: url('#{$path}#{$fontName}/#{$fontName}.eot?#iefix') format('embedded-opentype'), // IE8 and below\n    \t\t\t url('#{$path}#{$fontName}.ttf') format('truetype'), // Safari, Android, iOS\n    \t\t\t url('#{$path}#{$fontName}.svg##{$family}') format('svg'); // legacy iOS;\n\n    } @else if $bSupport == 1 {\n\n      src: url('#{$path}#{$fontName}.ttf') format('truetype'), // Safari, Android, iOS\n           url('#{$path}#{$fontName}.svg##{$family}') format('svg'); // legacy iOS;\n\n    }\n      src: url('#{$path}#{$fontName}/#{$fontName}.woff') format('woff'); // Standard\n\n\t\tfont-style: $style;\n\t\tfont-weight: $weight;\n\t}\n}\n\n@mixin genericlink($color) {\n    font-size:16px;\n    color: $color;\n}\n\n@mixin editor() {\n    .contextual-region {\n        position: relative;\n    }\n    #block-asterics-local-tasks {\n        position: fixed; z-index: 999; top: 400px; right: 0;\n        ul {\n            margin: 0;\n            text-align: right;\n            border: none;\n            padding: 0;\n            li {display: block;margin: 5px 0;\n                a { margin: 0;\n                    padding: 10px 20px;\n                    display: inline-block;\n                    background: rgba(30,30,30,.85);\n                    color: #fff;\n                    border: none;\n                    font-weight: 300;\n                    box-shadow: 0 0 60px rgba(0,0,0,.3);\n                    transition: .3s;\n                    -webkit-transition: .3s;\n                    &.active {background: #fff; color: #333;}\n                    &:hover { padding-right: 50px;  background: #fff; color: #333;}\n                }\n            }\n        }\n    }\n}\n\n@mixin defaultBackground() {\n        background-image: url(../images/assets-03.svg);\n        background-repeat: no-repeat;\n        background-size: 100% 100%;\n        content: \"\";\n        display: block;\n        position: absolute;\n        top: 56px;\n        right: 20%;\n        width: 100%;\n        height: 100%;\n        max-height: calc(100vh - 200px);\n        z-index: 0;\n}\n\n@mixin getSocialIcon($type,$color) {\n  $color_parsed: str-replace(#{$color}, '#', '%23');\n  @if $type == 'twitter' {\n    background-image: url('data:image/svg+xml;utf8,<svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24.2 22.41\"><path d=\"M22.2 4.94a8.41 8.41 0 0 1-2.38.66 4.21 4.21 0 0 0 1.82-2.3 8.3 8.3 0 0 1-2.63 1 4.15 4.15 0 0 0-7.17 2.83 4.26 4.26 0 0 0 .11 1 11.76 11.76 0 0 1-8.54-4.37 4.07 4.07 0 0 0-.56 2.08 4.14 4.14 0 0 0 1.84 3.45 4.13 4.13 0 0 1-1.88-.52v.05a4.15 4.15 0 0 0 3.33 4.07A4.42 4.42 0 0 1 5 13a4.11 4.11 0 0 1-.74 0 4.17 4.17 0 0 0 3.87 2.88A8.29 8.29 0 0 1 3 17.61a8 8 0 0 1-1-.06 11.67 11.67 0 0 0 6.35 1.86A11.71 11.71 0 0 0 20.14 7.62v-.53a8.63 8.63 0 0 0 2.06-2.15z\" fill=\"#{$color_parsed}\"/></svg>');\n  } @else if $type == 'facebook' {\n    background-image: url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 27.56\"><defs></defs><title>redes</title><path style=\"fill:#{$color_parsed};\" d=\"M20.64,10.26H17.48V8.19a.84.84,0,0,1,.88-1h2.23V3.81H17.52A3.89,3.89,0,0,0,13.33,8v2.28h-2v3.53h2v10h4.15v-10h2.8Z\"/></svg>');\n  } @else if $type == 'instagram' {\n    background-image: url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 27.56\"><defs></defs><title>redes</title><path fill=\"#{$color_parsed}\" d=\"M22.28,3.54H9.72a4,4,0,0,0-4,4V20.06a4,4,0,0,0,4,4H22.28a4,4,0,0,0,4-4V7.5A4,4,0,0,0,22.28,3.54ZM23.42,5.9h.45V9.37H20.41V5.91ZM13.08,11.68a3.58,3.58,0,0,1,5.84,0,3.55,3.55,0,0,1,.69,2.1,3.61,3.61,0,0,1-7.22,0A3.55,3.55,0,0,1,13.08,11.68Zm11.17,8.38a2,2,0,0,1-2,2H9.72a2,2,0,0,1-2-2V11.68h3.06a5.6,5.6,0,1,0,10.38,0h3.06Z\"/></svg>');\n  } @else if $type == 'youtube' {\n    background-image: url('data:image/svg+xml;utf8,<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 27.56\"><defs></defs><title>redes</title><path fill=\"#{$color_parsed}\" d=\"M24.59,3.38H7.41a6.11,6.11,0,0,0-6.1,6.11v8.58a6.1,6.1,0,0,0,6.1,6.1H24.59a6.1,6.1,0,0,0,6.1-6.1V9.49A6.11,6.11,0,0,0,24.59,3.38ZM20.46,14.2l-8,3.83a.32.32,0,0,1-.46-.29V9.84a.31.31,0,0,1,.46-.29l8,4.07A.32.32,0,0,1,20.46,14.2Z\"/></svg>');\n  }\n}\n\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n"]}